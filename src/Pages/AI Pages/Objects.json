{
    "topic": "Objects in JavaScript",
    "content": [
    {
    "type": "paragraph",
    "text": "In JavaScript, an object is a collection of key-value pairs, where each key is a string (or symbol) and each value can be any data type, including other objects."
    },
    {
    "type": "funFact",
    "text": "In JavaScript, objects are often used to represent real-world objects, such as a car or a person, and to group related data and functionality together."
    },
    {
    "type": "code",
    "text": "Here is an example of an object:",
    "code": "const person = {\n name: 'John',\n age: 30,\n hobbies: ['reading', 'swimming', 'traveling'],\n greet: function() {\n console.log(Hello, my name is ${this.name} and I'm ${this.age} years old.);\n }\n};"
    },
    {
    "type": "quiz",
    "question": "What is the difference between dot notation and bracket notation when accessing object properties?",
    "options": [
    "There is no difference",
    "Dot notation is faster than bracket notation",
    "Bracket notation can be used to access properties with spaces or special characters in their names",
    "Dot notation can only be used to access properties with alphanumeric names"
    ],
    "answer": "Bracket notation can be used to access properties with spaces or special characters in their names"
    },
    {
    "type": "code",
    "text": "Here is an example of accessing an object property using dot notation:",
    "code": "const person = {\n name: 'John',\n age: 30\n};\n\nconsole.log(person.name); // Output: 'John'"
    },
    {
    "type": "funFact",
    "text": "In JavaScript, objects can be created using object literals, object constructors, and object prototypes."
    },
    {
        "type": "code",
        "text": "Example:",
        "code": "const person1 = {\n firstName: \"John\",\n lastName: \"Doe\",\n age: 30,\n greeting: function() {\n console.log(Hello, my name is ${this.firstName} ${this.lastName} and I am ${this.age} years old.);\n }\n};\n\nfunction Person2(firstName, lastName, age) {\n this.firstName = firstName;\n this.lastName = lastName;\n this.age = age;\n this.greeting = function() {\n console.log(Hello, my name is ${this.firstName} ${this.lastName} and I am ${this.age} years old.);\n };\n}\n\nconst person2 = new Person2(\"Jane\", \"Doe\", 25);\n\nfunction Person3(firstName, lastName, age) {\n this.firstName = firstName;\n this.lastName = lastName;\n this.age = age;\n}\n\nPerson3.prototype.greeting = function() {\n console.log(Hello, my name is ${this.firstName} ${this.lastName} and I am ${this.age} years old.);\n};\n\nconst person3 = new Person3(\"Bob\", \"Smith\", 40);\n\nperson1.greeting();\nperson2.greeting();\nperson3.greeting();"
        },
    {
    "type": "quiz",
    "question": "What is an object constructor?",
    "options": [
    "A function that creates and returns an object",
    "A function that takes an object as an argument",
    "A function that converts an object to an array",
    "A function that compares two objects"
    ],
    "answer": "A function that creates and returns an object"
    },
    
    {
    "type": "funFact",
    "text": "JavaScript objects can have methods, which are functions that are stored as object properties."
    },
    {
    "type": "quiz",
    "question": "What is a method in JavaScript?",
    "options": [
    "A function that takes an object as an argument",
    "A function that converts an object to an array",
    "A function that compares two objects",
    "A function that is stored as an object property"
    ],
    "answer": "A function that is stored as an object property"
    }
    ]
    }